{"version":3,"sources":["componentCartaDesayuno/cartaDesayuno.jsx","ComponentDesayuno/desayuno.jsx","list/total.jsx","list/List.jsx","componentCartaMenu/cartaMenu.jsx","componentMenu/menu.jsx","App.js","serviceWorker.js","index.js"],"names":["CartaDesayuno","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","item","precio","react_default","a","createElement","Component","Desayuno","state","desayuno","status","_this2","fetch","then","response","json","data","value","push","id","setState","map","key","cartaDesayuno","onClick","handleSalir","bind","Button","handleDesayuno","type","bsStyle","class","TotalMenu","total","List","handleDelete","assertThisInitialized","list","delete","console","log","CartaMenu","tama√±o","count","handleCount","length","pop","list_List","Menu","menu","cartaMenu","handleMenu","App","name","className","Grid","Row","Col","xs","md","lg","Form","onSubmit","handleSubmit","FormControl","onChange","handleName","placeholder","handleCancel","event","preventDefault","trim","alert","target","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bc0043c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass CartaDesayuno extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.item = props.item;\r\n      this.precio= props.precio;  \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.item}\r\n                {this.precio}\r\n                <button>Seleccionar</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartaDesayuno;","import React, {Component} from 'react';\r\nimport CartaDesayuno from '../componentCartaDesayuno/cartaDesayuno'\r\nimport {Button} from 'react-bootstrap';\r\n\r\nclass Desayuno extends Component{ \r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        desayuno: [],\r\n        status: false\r\n    }    \r\n}\r\n\r\ncomponentDidMount(){\r\n  const {desayuno} = this.state;\r\n  fetch('https://raw.githubusercontent.com/aybaneze/lim-2018-01-burger-queen/master/src/desayuno.json')\r\n    .then(response=>response.json())\r\n      .then(data=>{\r\n        for(let value in data){\r\n          desayuno.push({\r\n          id: data[value].id,\r\n          item: data[value].item,\r\n          precio: data[value].precio\r\n        })  \r\n        } \r\n        this.setState({desayuno})  \r\n      })\r\n}\r\n\r\nhandleDesayuno(){\r\n    this.setState({status:true})\r\n}\r\nhandleSalir(){\r\n    this.setState({status:false})\r\n}\r\n\r\n    render(){\r\n        if(this.state.status){\r\n             return(\r\n                 <div>\r\n                    {this.state.desayuno.map((data,key)=>{\r\n                        return(\r\n                            <CartaDesayuno\r\n                            key={key}\r\n                            item= {data.item}\r\n                            precio = {data.precio}\r\n                            />\r\n                        )\r\n                    })} \r\n                    <button onClick={this.handleSalir.bind(this)}>Salir</button>                  \r\n                 </div>\r\n                    )  \r\n        }else{\r\n            return(\r\n                 <div>\r\n                     <Button onClick={this.handleDesayuno.bind(this)} type=\"submit\" bsStyle=\"success\">Desayuno  <i class=\"fas fa-coffee\"></i></Button>                         \r\n                 </div>\r\n                    )  \r\n        }\r\n    \r\n}\r\n}\r\n\r\nexport default Desayuno;","import React, {Component} from 'react';\r\nclass TotalMenu extends Component{\r\nconstructor(props){\r\n    super()\r\n    this.total=props.total\r\n}\r\nrender(){\r\n    return(\r\n        <div>\r\n            {this.total}\r\n        </div>\r\n    )\r\n}\r\n} \r\n\r\nexport default TotalMenu; ","import React, {Component} from 'react';\r\nimport TotalMenu from './total' \r\n\r\n\r\nclass List extends Component{\r\n constructor(props){\r\n    super(props);\r\n    this.id=props.id;\r\n     this.item=props.item;\r\n     this.precio=props.precio;\r\n     this.handleDelete=this.handleDelete.bind(this);\r\n     this.total=props.total;\r\n     this.state={\r\n         list: []\r\n     }\r\n }\r\n\r\ncomponentDidMount(){\r\n    const {list} = this.state;\r\n    list.push({total:this.total})\r\n    this.setState({list})\r\n}\r\n\r\nhandleDelete(id){\r\n    this.props.delete(id)\r\n}\r\n\r\n render(){\r\n     console.log(this.state.list)\r\n     return(\r\n         <div>\r\n             {this.item}\r\n             {this.precio}\r\n             <button onClick={()=>{this.handleDelete(this.id)}}>Eliminar</button>\r\n             {this.state.list.map((data,key)=>{\r\n                 return(\r\n                     <TotalMenu\r\n                     key={key}\r\n                     total={data.total}\r\n                     />\r\n                 )\r\n             })}\r\n         </div>\r\n     )\r\n }\r\n\r\n\r\n\r\n}\r\n\r\nexport default List;","import React, {Component} from 'react';\r\nimport List from '../list/List'\r\n\r\n\r\nclass CartaMenu extends Component{\r\n    constructor(props){\r\n        super(props); \r\n        this.item= props.item;\r\n        this.precio= props.precio;\r\n        this.tama√±o= props.tama√±o;\r\n        this.id= props.id;\r\n        this.state={\r\n            count:[]\r\n        }\r\n        this.handleCount.bind(this)\r\n        this.delete=this.delete.bind(this)\r\n    }\r\n    \r\n \r\n\r\n    handleCount(id,item,precio){ \r\n        const {count} = this.state;\r\n        console.log()\r\n        count.push({\r\n            id:id,\r\n            item: item,\r\n            precio: precio,\r\n            total:(count.length+1)*precio\r\n        })\r\n       this.setState({count})\r\n       console.log(count)\r\n    }\r\n  \r\n\r\n    delete(id){\r\n        const {count}=this.state;\r\n           count.pop()\r\n            this.setState({count})\r\n           }\r\n            \r\n\r\n\r\n    render(){\r\n        console.log(this.state.count)\r\n            return(\r\n                <div>\r\n                    {this.item}\r\n                    {this.precio}\r\n                    {this.tama√±o}\r\n                    <button onClick={()=>{this.handleCount(this.id,this.item,this.precio)}}>Seleccionar</button>\r\n                     {this.state.count.map((data,key)=>{\r\n                             return(\r\n                                <List\r\n                                    key={key}      \r\n                                    id={data.id}  \r\n                                    item={data.item}\r\n                                    precio={data.precio}\r\n                                    delete={this.delete}\r\n                                    total={data.total}                                  \r\n                                />\r\n                              \r\n                                )\r\n                               \r\n                           }\r\n                )}\r\n                \r\n                </div>\r\n                 \r\n            )\r\n    }\r\n}\r\n\r\nexport default CartaMenu;","import React, {Component} from 'react';\r\nimport CartaMenu from '../componentCartaMenu/cartaMenu'\r\nimport TotalMenu from '../list/total';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nclass Menu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            menu:[],\r\n            status: false\r\n        }\r\n\r\n        this.total= props.total;\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {menu} = this.state;\r\n        fetch('https://raw.githubusercontent.com/aybaneze/lim-2018-01-burger-queen/master/src/menu.json')\r\n          .then(response=>response.json())\r\n            .then(data=>{\r\n              for(let value in data){\r\n                menu.push({\r\n                id: data[value].id,\r\n                item: data[value].item,\r\n                precio: data[value].precio,\r\n                tama√±o: data[value].tama√±o\r\n              })  \r\n              } \r\n              this.setState({menu})  \r\n            })\r\n            console.log(this.state.menu)\r\n    }\r\n\r\n    handleMenu(){\r\n        this.setState({status:true})\r\n    }\r\n\r\n    handleSalir(){\r\n      this.setState({status:false})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.status){\r\n            return(\r\n                <div>\r\n                    {this.state.menu.map((data,key)=>{\r\n                        return(\r\n                            <CartaMenu\r\n                                key={key}\r\n                                id={data.id}\r\n                                item= {data.item}\r\n                                precio={data.precio}   \r\n                                tama√±o={data.tama√±o} \r\n                            />\r\n                        )\r\n                    })}\r\n                    <h1>Total</h1>\r\n                    {/* <TotalMenu/> */}\r\n                    <button onClick={this.handleSalir.bind(this)}>Salir</button>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <Button onClick={this.handleMenu.bind(this)} type=\"submit\" bsStyle=\"success\">Menu  <i class=\"fas fa-utensils\"></i></Button>\r\n                </div>\r\n                  )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\nimport {Grid, Row, Col,Form, FormControl} from 'react-bootstrap'\nimport './App.css';\nimport Desayuno from './ComponentDesayuno/desayuno'\nimport Menu from './componentMenu/menu'\nimport {Button} from 'react-bootstrap';\n// import * as firebase from 'firebase';\n// import {db_config} from './config/config.js';\nclass App extends Component {\nconstructor(props){\n  super(props);\n    this.state = {\n      name: '',\n      status: true\n    }\n}\n\n  render(){\n    if(this.state.status){\n       return (\n       <div className=\"body\">\n         <Grid>\n          <Row className=\"show-grid\">\n           <Col xs={12} md={12} lg={12}>\n           <h1>Burger Queen</h1>\n           <Form onSubmit={this.handleSubmit.bind(this)}>\n           <FormControl\n            type=\"text\"\n            onChange={this.handleName.bind(this)}\n            placeholder=\"Enter text\" \n            />\n             <Button type=\"submit\" bsStyle=\"success\">Ingresar</Button>\n            </Form>\n            </Col>\n          </Row>\n         </Grid>\n      </div>\n    )\n    } else{\n      return(     \n      <div className=\"inicio\">\n         \n         <Grid>\n          <Row className=\"show-grid\">\n           <Col xs={12} md={12} lg={12}>\n           <h1>Burger Queen</h1>\n           <h3>BurgerPedido de:{this.state.name}</h3>\n           <Button bsStyle=\"danger\" onClick={this.handleCancel.bind(this)}>Cancelar Pedido</Button>\n            </Col>\n            <Col xs={12} md={6} lg={6}>\n            <Desayuno/>\n            </Col>\n            <Col xs={12} md={6} lg={6}>\n             <Menu/>\n            </Col>\n          </Row>\n         </Grid>\n          \n         \n          \n          \n             \n      </div>\n      )      \n    }\n  }\n\nhandleSubmit(event){\n  event.preventDefault(event)\n  if(this.state.name.trim() != ''){\n    if(this.state.status){\n      this.setState({status:false})\n    }}else{\n      alert('Debe ingresar un usuario')\n    }\n}\n\nhandleName(event){\n  this.setState({name: event.target.value})\n}\n\nhandleCancel(){\n  this.setState({status:true})\n}\n\n}\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}