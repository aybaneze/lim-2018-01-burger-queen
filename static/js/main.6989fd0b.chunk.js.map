{"version":3,"sources":["componentCartaDesayuno/cartaDesayuno.jsx","ComponentDesayuno/desayuno.jsx","componentCartaMenu/cartaMenu.jsx","componentMenu/menu.jsx","App.js","serviceWorker.js","index.js"],"names":["CartaDesayuno","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","item","precio","react_default","a","createElement","className","Component","Desayuno","state","desayuno","status","_this2","fetch","then","response","json","data","value","push","id","setState","map","key","cartaDesayuno","onClick","handleSalir","bind","Button","handleDesayuno","type","bsStyle","CartaMenu","tama√±o","handleCount","assertThisInitialized","console","log","count","Grid","Row","Col","xs","md","lg","Menu","menu","list","total","delete","parseInt","splice","_this3","cartaMenu","handleMenu","App","name","Form","onSubmit","handleSubmit","FormControl","onChange","handleName","placeholder","handleCancel","event","preventDefault","trim","alert","target","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6989fd0b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Grid, Row, Col,Form, FormControl} from 'react-bootstrap'\r\n\r\nclass CartaDesayuno extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.item = props.item;\r\n      this.precio= props.precio;  \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.item}\r\n                {this.precio}\r\n                <i className=\"fas fa-plus-square\"></i>\r\n                <h3>Total</h3> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartaDesayuno;","import React, {Component} from 'react';\r\nimport CartaDesayuno from '../componentCartaDesayuno/cartaDesayuno'\r\nimport {Button} from 'react-bootstrap';\r\n\r\nclass Desayuno extends Component{ \r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        desayuno: [],\r\n        status: false\r\n    }    \r\n}\r\n\r\ncomponentDidMount(){\r\n  const {desayuno} = this.state;\r\n  fetch('https://raw.githubusercontent.com/aybaneze/lim-2018-01-burger-queen/master/src/desayuno.json')\r\n    .then(response=>response.json())\r\n      .then(data=>{\r\n        for(let value in data){\r\n          desayuno.push({\r\n          id: data[value].id,\r\n          item: data[value].item,\r\n          precio: data[value].precio\r\n        })  \r\n        } \r\n        this.setState({desayuno})  \r\n      })\r\n}\r\n\r\nhandleDesayuno(){\r\n    this.setState({status:true})\r\n}\r\nhandleSalir(){\r\n    this.setState({status:false})\r\n}\r\n\r\n    render(){\r\n        if(this.state.status){\r\n             return(\r\n                 <div>\r\n                    {this.state.desayuno.map((data,key)=>{\r\n                        return(\r\n                            <CartaDesayuno\r\n                            key={key}\r\n                            item= {data.item}\r\n                            precio = {data.precio}\r\n                            />\r\n                        )\r\n                    })} \r\n                    <button onClick={this.handleSalir.bind(this)}>Salir</button>                  \r\n                 </div>\r\n                    )  \r\n        }else{\r\n            return(\r\n                 <div>\r\n                     <Button onClick={this.handleDesayuno.bind(this)} type=\"submit\" bsStyle=\"success\">Desayuno  <i className=\"fas fa-coffee\"></i></Button>                         \r\n                 </div>\r\n                    )  \r\n        }\r\n    \r\n}\r\n}\r\n\r\nexport default Desayuno;","import React, { Component } from 'react';\r\nimport {Grid, Row, Col} from 'react-bootstrap'\r\n// import List from '../list/List'\r\n\r\n\r\nclass CartaMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.item = props.item;\r\n        this.precio = props.precio;\r\n        this.tama√±o = props.tama√±o;\r\n        this.id = props.id;\r\n        this.handleCount = this.handleCount.bind(this)\r\n    }\r\n\r\n\r\n\r\n    handleCount(id, item, precio) {\r\n        console.log(id, item, precio)\r\n        this.props.count(id, item, precio)\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={12} md={6} lg={6}>\r\n                            {this.item}<br/>\r\n                            {this.tama√±o}\r\n                        </Col>\r\n                        <Col xs={12} md={4} lg={6}>\r\n                            s/.  {this.precio}\r\n                        </Col>\r\n                        <Col xs={12} md={2} lg={6}>\r\n                            <i className=\"fas fa-plus-square\" onClick={() => { this.handleCount(this.id, this.item, this.precio) }}></i>\r\n                        </Col>\r\n                    </Row>\r\n                </Grid>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartaMenu;","import React, {Component} from 'react';\r\nimport CartaMenu from '../componentCartaMenu/cartaMenu'\r\nimport {Button} from 'react-bootstrap';\r\nimport {Grid, Row, Col} from 'react-bootstrap'\r\n\r\nclass Menu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            menu:[],\r\n            list:[],\r\n            total:0,\r\n            status: false\r\n        }\r\n        this.total= props.total;\r\n        this.count= this.count.bind(this)\r\n        this.delete=this.delete.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {menu} = this.state;\r\n        fetch('https://raw.githubusercontent.com/aybaneze/lim-2018-01-burger-queen/master/src/menu.json')\r\n          .then(response=>response.json())\r\n            .then(data=>{\r\n              for(let value in data){\r\n                menu.push({\r\n                id: data[value].id,\r\n                item: data[value].item,\r\n                precio: data[value].precio,\r\n                tama√±o: data[value].tama√±o\r\n              })  \r\n              } \r\n              this.setState({menu})  \r\n            })\r\n            console.log(this.state.menu)\r\n    }\r\n\r\n    count(id,item,precio){\r\n        const {list} = this.state;\r\n        list.push({\r\n                    id:id,\r\n                    item: item,\r\n                    precio: precio,\r\n                })\r\n               this.setState({list:list, total:parseInt(precio)})         \r\n    }\r\n\r\n    handleMenu(){\r\n        this.setState({status:true})\r\n    }\r\n\r\n    handleSalir(){\r\n      this.setState({status:false})\r\n    }\r\n    \r\n    delete(id,precio){\r\n    console.log(id)\r\n        const {list}=this.state;\r\n        console.log(list)\r\n            if(id == id){\r\n              list.splice(id, 1);\r\n           }\r\n        this.setState({list:list, total: 0})\r\n        }\r\n            \r\n\r\n    render(){\r\n        console.log(this.state.total) \r\n        if(this.state.status){\r\n            return(\r\n                <div>\r\n                    {this.state.menu.map((data,key)=>{\r\n                        return(\r\n                            <CartaMenu\r\n                                key={key}\r\n                                id={data.id}\r\n                                item= {data.item}\r\n                                precio={data.precio}   \r\n                                tama√±o={data.tama√±o}\r\n                                count ={ this.count}\r\n                            />\r\n                        )\r\n                    })}\r\n                     {this.state.list.map((data,key)=>{\r\n                         key={key}\r\n                        return(\r\n                            \r\n                            <div>                            \r\n                            <ul>\r\n                            <li>{data.item}\r\n                             {data.precio}\r\n                             {data.tama√±o}\r\n                             <i className=\"fas fa-trash\" onClick={()=>this.delete(key,data.precio)}></i> \r\n                            </li>\r\n                            </ul>  \r\n                           </div>\r\n                        )\r\n                    })}\r\n                      \r\n                    <Grid>\r\n                    <Row className=\"show-grid\">\r\n                    <Col xs={12} md={5} lg={6}>\r\n                        <h4>Total</h4> {this.state.total}  \r\n                        </Col>\r\n                        <Col xs={12} md={5} lg={6}>\r\n                        <i className=\"fas fa-undo-alt\" onClick={this.handleSalir.bind(this)}>Salir</i>\r\n                        </Col>\r\n                    </Row>\r\n                    </Grid>    \r\n                    \r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <Button onClick={this.handleMenu.bind(this)} type=\"submit\" bsStyle=\"success\">Menu  <i className=\"fas fa-utensils\"></i></Button>\r\n                </div>\r\n                  )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\nimport {Grid, Row, Col,Form, FormControl} from 'react-bootstrap'\nimport './App.css';\nimport Desayuno from './ComponentDesayuno/desayuno'\nimport Menu from './componentMenu/menu'\nimport {Button} from 'react-bootstrap';\n// import * as firebase from 'firebase';\n// import {db_config} from './config/config.js';\nclass App extends Component {\nconstructor(props){\n  super(props);\n    this.state = {\n      name: '',\n      status: true\n    }\n}\n\n  render(){\n    if(this.state.status){\n       return (\n       <div className=\"body\">\n         <Grid>\n          <Row className=\"show-grid\">\n           <Col xs={12} md={12} lg={12}>\n           <h1>Burger Queen</h1>\n           <Form onSubmit={this.handleSubmit.bind(this)}>\n           <FormControl\n            type=\"text\"\n            onChange={this.handleName.bind(this)}\n            placeholder=\"Enter text\" \n            />\n             <Button type=\"submit\" bsStyle=\"success\">Ingresar</Button>\n            </Form>\n            </Col>\n          </Row>\n         </Grid>\n      </div>\n    )\n    } else{\n      return(     \n      <div className=\"inicio\">\n         <Grid>\n          <Row className=\"show-grid\">\n           <Col xs={12} md={12} lg={12}>\n           <h1>Burger Queen</h1>\n           <h4>BurgerPedido de:</h4><h2>{this.state.name}</h2>\n           <Button bsStyle=\"danger\" onClick={this.handleCancel.bind(this)}>Cancelar Pedido</Button>\n            </Col>\n            <Col xs={12} md={6} lg={6}>\n            <Desayuno/>\n            </Col>\n            <Col xs={12} md={6} lg={6}>\n             <Menu/>\n            </Col>\n          </Row>\n         </Grid>       \n      </div>\n      )      \n    }\n  }\n\nhandleSubmit(event){\n  event.preventDefault(event)\n  if(this.state.name.trim() != ''){\n    if(this.state.status){\n      this.setState({status:false})\n    }}else{\n      alert('Debe ingresar un usuario')\n    }\n}\n\nhandleName(event){\n  this.setState({name: event.target.value})\n}\n\nhandleCancel(){\n  this.setState({status:true})\n}\n\n}\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}