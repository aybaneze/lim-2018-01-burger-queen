{"version":3,"sources":["componentCartaDesayuno/cartaDesayuno.jsx","ComponentDesayuno/desayuno.jsx","componentCartaMenu/cartaMenu.jsx","componentMenu/menu.jsx","App.js","serviceWorker.js","index.js"],"names":["CartaDesayuno","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","item","precio","id","handleCountDesayuno","bind","assertThisInitialized","countDesayuno","_this2","react_default","a","createElement","onClick","className","Component","Desayuno","state","desayuno","listDesayuno","total","status","fetch","then","response","json","data","value","push","setState","parseInt","countTot","_this3","map","key","componentCartaDesayuno_cartaDesayuno","Grid","Row","Col","xs","md","lg","handleSalir","Button","handleDesayuno","type","bsStyle","CartaMenu","tama√±o","handleCount","count","Menu","menu","list","console","log","countTotal","componentCartaMenu_cartaMenu","handleMenu","App","name","lista","deleteDesayuno","delete","splice","Form","onSubmit","handleSubmit","FormControl","onChange","handleName","placeholder","componentMenu_menu","deleteMenu","Table","responsive","handleOk","handleCancel","alert","event","preventDefault","trim","target","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa0df497.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './cartaDesayuno.css'\r\n\r\nclass CartaDesayuno extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.item = props.item;\r\n      this.precio = props.precio;\r\n      this.id= props.id;\r\n      this.handleCountDesayuno=this.handleCountDesayuno.bind(this);\r\n\r\n    }\r\n\r\n    handleCountDesayuno(id,item,precio){\r\n        this.props.countDesayuno(id,item,precio)\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n                <button onClick={()=>{this.handleCountDesayuno(this.id,this.item,this.precio)}} className=\"cont\">\r\n                {this.item}<br/>\r\n                <p>s/{this.precio}</p>\r\n                </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartaDesayuno;","import React, {Component} from 'react';\r\nimport CartaDesayuno from '../componentCartaDesayuno/cartaDesayuno'\r\nimport {Button} from 'react-bootstrap';\r\nimport {Grid, Row, Col} from 'react-bootstrap'\r\n\r\nclass Desayuno extends Component{ \r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        desayuno: [],\r\n        listDesayuno: [],\r\n        total: 0,\r\n        status: false\r\n    }   \r\n    this.countDesayuno=this.countDesayuno.bind(this)\r\n}\r\n\r\ncomponentDidMount(){\r\n  const {desayuno} = this.state;\r\n  fetch('https://raw.githubusercontent.com/aybaneze/lim-2018-01-burger-queen/master/src/desayuno.json')\r\n    .then(response=>response.json())\r\n      .then(data=>{\r\n        for(let value in data){\r\n          desayuno.push({\r\n          id: data[value].id,\r\n          item: data[value].item,\r\n          precio: data[value].precio\r\n        })  \r\n        } \r\n        this.setState({desayuno})  \r\n      })\r\n}\r\n\r\n\r\ncountDesayuno(id,item,precio){\r\n const {listDesayuno} = this.state;\r\n listDesayuno.push({\r\n     id: id,\r\n     item: item,\r\n     precio: precio,\r\n })\r\n this.setState({listDesayuno: listDesayuno, total: this.state.total + parseInt(precio)})\r\n this.props.countTot(precio,item);\r\n}\r\n\r\nhandleDesayuno(){\r\n    this.setState({status:true})\r\n}\r\n\r\n\r\nhandleSalir(){\r\n    this.setState({status:false})\r\n}\r\n\r\n\r\n\r\n    render(){\r\n        if(this.state.status){\r\n             return(\r\n                 <div>\r\n                    {this.state.desayuno.map((data,key)=>{\r\n                        return(\r\n                            <CartaDesayuno\r\n                            id={data.id}\r\n                            key={key}\r\n                            item= {data.item}\r\n                            precio = {data.precio}\r\n                            countDesayuno = {this.countDesayuno}\r\n                            />\r\n                        )\r\n                    })} \r\n                     <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={12} md={6} lg={6}>\r\n                    <i className=\"fas fa-undo-alt\" onClick={this.handleSalir.bind(this)}>Salir</i> \r\n                    </Col>\r\n                    </Row>\r\n                    </Grid>                   \r\n                 </div>\r\n                    )  \r\n        }else{\r\n            return(\r\n                 <div>\r\n                     <Button onClick={this.handleDesayuno.bind(this)} type=\"submit\" bsStyle=\"success\">Desayuno  <i className=\"fas fa-coffee\"></i></Button>                         \r\n                 </div>\r\n                    )  \r\n        }\r\n    \r\n}\r\n}\r\n\r\nexport default Desayuno;","import React, { Component } from 'react';\r\nimport {Grid, Row, Col} from 'react-bootstrap'\r\nimport './cartaMenu.css'\r\n\r\n\r\nclass CartaMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.item = props.item;\r\n        this.precio = props.precio;\r\n        this.tama√±o = props.tama√±o;\r\n        this.id = props.id;\r\n        this.handleCount = this.handleCount.bind(this)\r\n    }\r\n\r\n    handleCount(id, item, precio) {\r\n        this.props.count(id, item, precio)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"contain\" onClick={() => { this.handleCount(this.id, this.item, this.precio) }}>\r\n                            {this.item}<br/>\r\n                            {this.tama√±o}\r\n                            <p>s/.  {this.precio}</p>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CartaMenu;","import React, {Component} from 'react';\r\nimport CartaMenu from '../componentCartaMenu/cartaMenu'\r\nimport {Button} from 'react-bootstrap';\r\nimport {Grid, Row, Col} from 'react-bootstrap'\r\nimport './menu.css'\r\n\r\nclass Menu extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            menu:[],\r\n            list:[],\r\n            total:0,\r\n            status: false\r\n        }\r\n        this.count= this.count.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {menu} = this.state;\r\n        fetch('https://raw.githubusercontent.com/aybaneze/lim-2018-01-burger-queen/master/src/menu.json')\r\n          .then(response=>response.json())\r\n            .then(data=>{\r\n              for(let value in data){\r\n                menu.push({\r\n                id: data[value].id,\r\n                item: data[value].item,\r\n                precio: data[value].precio,\r\n                tama√±o: data[value].tama√±o\r\n              })  \r\n              } \r\n              this.setState({menu})  \r\n            })\r\n            console.log(this.state.menu)\r\n    }\r\n\r\n    count(id,item,precio){\r\n        console.log(precio)\r\n        const {list} = this.state;\r\n        list.push({\r\n                    id:id,\r\n                    item: item,\r\n                    precio: precio,\r\n                })\r\n               this.setState({list:list, total:this.state.total+parseInt(precio)})\r\n               this.props.countTotal(precio,item)         \r\n    }\r\n\r\n    handleMenu(){\r\n        this.setState({status:true})\r\n    }\r\n\r\n    handleSalir(){\r\n      this.setState({status:false})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.status){\r\n            return(\r\n                <div>\r\n                    {this.state.menu.map((data,key)=>{\r\n                        return(\r\n                            <CartaMenu\r\n                                key={key}\r\n                                id={data.id}\r\n                                item= {data.item}\r\n                                precio={data.precio}   \r\n                                tama√±o={data.tama√±o}\r\n                                count ={ this.count}\r\n                            />\r\n                        )\r\n                    })}\r\n                    <Grid>\r\n                    <Row className=\"show-grid\">\r\n                        <Col xs={12} md={6} lg={6}>\r\n                        <i className=\"fas fa-undo-alt\" onClick={this.handleSalir.bind(this)}>Salir</i>\r\n                        </Col>\r\n                    </Row>\r\n                    </Grid>    \r\n                    \r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <Button onClick={this.handleMenu.bind(this)} type=\"submit\" bsStyle=\"success\">Menu  <i className=\"fas fa-utensils\"></i></Button>\r\n                </div>\r\n                  )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\nimport {Grid, Row, Col,Form, FormControl,Table} from 'react-bootstrap'\nimport './App.css';\nimport Desayuno from './ComponentDesayuno/desayuno'\nimport Menu from './componentMenu/menu'\nimport {Button} from 'react-bootstrap';\n// import db from './config/config'\n\n\nclass App extends Component {\nconstructor(props){\n  super(props);\n    this.state = {\n      name: '',\n      status: true,\n      total: 0.00,\n      lista:[],\n      listDesayuno: []\n    }\n    this.countTotal=this.countTotal.bind(this);\n    this.countTot=this.countTot.bind(this);\n    this.deleteDesayuno=this.deleteDesayuno.bind(this);\n    this.delete=this.delete.bind(this)\n}\n\ncountTotal(precio,item){\n  const {lista} = this.state;\n  lista.push({\n    item: item,\n    precio: precio\n  })\n  this.setState({lista:lista,total: this.state.total+parseInt(precio)})\n}\n\ncountTot(precio,item){\n  const {listDesayuno} = this.state;\n  listDesayuno.push({\n    item: item,\n    precio: precio\n  })\n  this.setState({listDesayuno:listDesayuno,total: this.state.total+parseInt(precio)})\n}\n\n\n\ndeleteDesayuno(id,precio){\n  const {listDesayuno}=this.state;\n      if(id == id){\n        listDesayuno.splice(id, 1);\n     }\n  this.setState({listDesayuno:listDesayuno, total:this.state.total - parseInt(precio)})\n  }\n\n\ndelete(id,precio){\n  const {lista}=this.state;\n      if(id == id){\n        lista.splice(id, 1);\n     }\n  this.setState({lista:lista, total:this.state.total - parseInt(precio)})\n}\n\n  render(){\n    \n    if(this.state.status){\n       return (   \n         <div className=\"bodyInit\">  \n         <Grid>\n          <Row className=\"show-grid one\">\n           <Col xs={12} md={12} lg={12}>\n           <h1>Burger Queen</h1>\n           <Form onSubmit={this.handleSubmit.bind(this)}>\n           <FormControl\n            type=\"text\"\n            onChange={this.handleName.bind(this)}\n            placeholder=\"Enter text\" \n            />\n             <Button type=\"submit\" bsStyle=\"success\">Ingresar</Button>\n            </Form>\n            </Col>\n          </Row>\n         </Grid>\n         </div> \n    )}else{   \n      return(     \n      <div className=\"inicio\">\n         <Grid>\n          <Row className=\"show-grid\">\n           <Col xs={12} md={12} lg={12}>\n           <h1>Burger Queen</h1>\n           </Col>       \n         \n            </Row>\n            <Row>\n            </Row>\n            <Row className=\"show-grid\">\n            <Col xs={12} md={6} lg={6}>     \n            <Desayuno\n            countTot={this.countTot}\n            deleteDesayuno={this.deleteDesayuno}\n            />\n            <br/>\n            <Menu\n             countTotal={this.countTotal}\n             deleteMenu={this.deleteMenu}\n             />\n            </Col>\n            <Col className=\"list\" xs={12} md={6} lg={6}>\n            <Table responsive>\n  <thead>\n    <tr>\n    <p>Cliente: {this.state.name}</p>\n    </tr>\n    <tr>\n      <th>Descripci√≥n</th>\n      <th>Precio</th>\n    </tr>\n  </thead>\n          {this.state.lista.map((data,key)=>{\n            return(\n            <tbody>\n              <td>{data.item}</td>\n              <td>s/{data.precio}</td>\n              <td><i className=\"fas fa-trash\" onClick={()=>this.delete(key,data.precio)}></i></td>\n              </tbody>\n            )\n            })}\n             {this.state.listDesayuno.map((data,key)=>{\n            return(\n              <tbody> \n                <td>{data.item}</td> \n                <td>s/{data.precio}</td>    \n                <td><i className=\"fas fa-trash\" onClick={()=>this.deleteDesayuno(key,data.precio)}></i></td>\n                </tbody>\n            )\n            })}\n          <tbody>\n          <td><p>Total</p></td>\n          <td>s/{this.state.total}</td>\n          </tbody>        \n            </Table> \n            <Button bsStyle=\"success\" onClick={this.handleOk.bind(this)}>Enviar Pedido</Button>\n            </Col>\n          </Row>\n         </Grid>  \n         <Col xs={12} md={6} lg={6}>\n           <Button bsStyle=\"warning\" onClick={this.handleCancel.bind(this)}>Cancelar Pedido</Button>\n           </Col>     \n      </div>\n      )      \n    }\n  }\n\nhandleOk(){\n  alert('se envi√≥ el pedido');\n  this.setState({status:true})\n}\n\nhandleSubmit(event){\n  event.preventDefault(event)\n  if(this.state.name.trim() != ''){\n    if(this.state.status){\n      this.setState({status:false})\n    }}else{\n      alert('Debe ingresar un usuario')\n    }\n}\n\nhandleName(event){\n  this.setState({name: event.target.value})\n}\n\nhandleCancel(){\n  this.setState({status:true})\n}\n\n// componentDidMount(){\n//   db.collection('pedido').get().then((snapShots)=>{\n//     console.log(snapShots);\n//   })\n// }\n\n}\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}